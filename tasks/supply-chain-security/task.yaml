apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  creationTimestamp: null
  name: supply-chain-security
spec:
  params:
  - description: The unique build number
    name: BUILD_ID
    type: string
  - description: The fileName of the job which is the trigger context fileName
    name: JOB_NAME
    type: string
  - description: The specification of the job
    name: JOB_SPEC
    type: string
  - description: 'The kind of the job: postsubmit or presubmit'
    name: JOB_TYPE
    type: string
  - description: The base git reference of the pull request
    name: PULL_BASE_REF
    type: string
  - description: The git sha of the base of the pull request
    name: PULL_BASE_SHA
    type: string
  - default: ""
    description: The git pull request number
    name: PULL_NUMBER
    type: string
  - default: ""
    description: The git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
    name: PULL_PULL_REF
    type: string
  - description: The git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
    name: PULL_PULL_SHA
    type: string
  - description: The git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
    name: PULL_REFS
    type: string
  - description: The git repository fileName
    name: REPO_NAME
    type: string
  - description: The git repository owner (user or organisation)
    name: REPO_OWNER
    type: string
  - description: The URL of the git repo to clone
    name: REPO_URL
    type: string
  stepTemplate:
    env:
    - name: BUILD_ID
      value: $(params.BUILD_ID)
    - name: JOB_NAME
      value: $(params.JOB_NAME)
    - name: JOB_SPEC
      value: $(params.JOB_SPEC)
    - name: JOB_TYPE
      value: $(params.JOB_TYPE)
    - name: PULL_BASE_REF
      value: $(params.PULL_BASE_REF)
    - name: PULL_BASE_SHA
      value: $(params.PULL_BASE_SHA)
    - name: PULL_NUMBER
      value: $(params.PULL_NUMBER)
    - name: PULL_PULL_REF
      value: $(params.PULL_PULL_REF)
    - name: PULL_PULL_SHA
      value: $(params.PULL_PULL_SHA)
    - name: PULL_REFS
      value: $(params.PULL_REFS)
    - name: REPO_NAME
      value: $(params.REPO_NAME)
    - name: REPO_OWNER
      value: $(params.REPO_OWNER)
    - name: REPO_URL
      value: $(params.REPO_URL)
    - name: HOME
      value: /workspace
    envFrom:
    - secretRef:
        name: jx-boot-job-env-vars
        optional: true
    name: ""
    resources: {}
  steps:
  - image: alpine:3.16
    name: download-syft
    resources: {}
    script: |
      #!/bin/sh
      apk add --no-cache curl unzip
      curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | \
      sh -s -- -b /workspace/source/bin v0.52.0
      chmod +x /workspace/source/bin/syft
  - env:
    - name: GIT_TOKEN
      valueFrom:
        secretKeyRef:
          key: password
          name: tekton-git
    - name: GIT_NAME
      valueFrom:
        secretKeyRef:
          key: username
          name: tekton-git
    - name: GIT_EMAIL
      value: jenkins-x@googlegroups.com
    image: ghcr.io/oras-project/oras:v0.13.0
    name: build-and-push-sbom
    resources: {}
    script: |
      #!/bin/sh
      source .jx/variables.sh
      export PATH=$PATH:/workspace/source/bin
      syft /workspace/source/image.tar --scope all-layers -o spdx-json > /workspace/source/sbom.json
      echo $GIT_TOKEN | oras push -u $GIT_USER --password-stdin ghcr.io/$DOCKER_REGISTRY_ORG/$REPO_NAME:$VERSION-sbom /workspace/source/sbom.json
      echo $GIT_TOKEN | oras push -u $GIT_USER --password-stdin ghcr.io/$DOCKER_REGISTRY_ORG/$REPO_NAME:latest-sbom /workspace/source/sbom.json
      rm -f /workspace/source/image.tar
  - image: alpine:3.16
    name: install-grype
    resources: {}
    script: |
      #!/bin/sh
      apk add --no-cache curl
      curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | \
      sh -s -- -b /workspace/source/bin
      chmod +x /workspace/source/bin/grype
  - image: alpine:3.16
    name: scan-sbom
    resources: {}
    script: |
      #!/bin/sh
      source .jx/variables.sh
      cat /workspace/source/sbom.json | /workspace/source/bin/grype > vulnerabilities.txt
